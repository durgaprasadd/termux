32*32
31*31
2/3
3/7
require('big-integer')
big-integer
big
a.length
a=''+(4746073226998690000)
''+(4746073226998690000)
Math.sqrt(47460732269986900000)
Math.sqrt(4746073226998690000)
shuffle([1,2,3])
}
return s;
}
length--
}
t[r] = temp;
if(r != length-1){
let temp = t.pop();
s.push(t[r]);
let r = Math.floor(Math.random()*length);
while(length != 0){
let length = list.length;
let t = list.slice();
let s = [];
shuffle = function(list){
shuffle([1,2,3])
}
return s
}
length--;
t[r]=t.pop();
s.push(t[r]);
let r = Math.floor(Math.random()*length);
while(length != 0){
let length = list.length;
let t = list.slice();
let s = [];
shuffle = function(list){
let t = list.slice();
let s = [];
shuffle = function(list){
n
}
console.log(x);
if(y%x == 0){
let x= Math.sqrt(y);
y = y+1;
y = d*y;
let y= Math.pow(n,2)
for(let n=1;n<d;n++){
for(let d=1;d<8;d++){
a.match(/[^0-9A-a]/)
a.match(/[^0-9A-z]/)
a.match(/[^0-9a-z]/)
a.match(/[^0-9]/)
a.match(/[0-9]/)
a.match(/2/)
a.match(/1/)
a='2dfgs662772dgsh'
1/0.86
console.log(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y)
console.log(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z)
c
b
a
y=1/x
x=w-1
w=1/v
v=u-56
u=1/t
t=s-1
s=1/r
r=q-3
q=1/p
p=o-7
o=1/n
n=m-1
m=1/l
l=k-27
k=1/j
j=i-1
i=1/h
h=g-7
d.toFixed(4)
g=1/f
f=e-3
e=1/d
d=c-1
c=1/b
b=a-28
a=Math.sqrt(827)
}
console.log(i,2);
if(i%2==0){continue;}
console.log(i);
for(let i=1;i<10;i++){
}
console.log(i);
if(i%2==0){continue;}
console.log(i);
for(let i=1;i<10;i++){
}
console.log(i);
if(i%2==0){continue;}
for(let i=1;i<10;i++){
25
c
b
a
c
c--
c
c--
c=1/b
1/b
b=a-1
a-1
a
a=Math.SQRT2
b=1/(a-1)
b=1/a
a=Math.sqrt(2)
1/a
a=0.41
1/a
a=0.414
1/a
a=0.41411
a=0,41411
a=+a
a=a.toFixed(4)
a=+a
a.toFixed(4)
a.toPrecision(4)
a
a/0.0001
a%0.0001
a=0.4141525255252
a.includes(0)
a=[]
[].includes(0)
console.log(a,b,c,d,e,f,g,h,i,j,k,l,m)
console.log(a,b,c,d,e,f,g,h,i,j,k,l)
c
b
a
m=1/l
l=k-1
k=1/j
j=i-4
i=1/h
h=g-1
g=1/f
f=e-1
e=1/d
d=c-1
c=1/b
b=a-2
a=Math.sqrt(7)
Math.sqrt(7)
c=1/c
c=b-1
b=1/b
b=a-1
a=Math.sqrt(3)
1/3
Math.sqrt(3)
a=true+true
true+true
true+0
true+false
Math.pow(5027,3)
b.every(x=>a.includes(x));
a.every(x=>b.includes(x));
b=[1,1,2,3,4,5]
a=[1,2,3,4,5]
apt
1/a
a=8/3
8/3
1/a
a=1/24421
1/a
a=1/3
12^12
a.indexOf('q')
a.indexOf(q)
a.indexOf(1)
a=[1,2,1,2]
a.sort()
a=['AC','CA','AB']
a.sort()
a=['A','C','B']
Math.sqrt(23)
13+5197+5701+6733+8389
+a
a=123
+a
a='123'
256*4
16*16
Object.keys(a).includes('1')
Object.keys(a).includes(1)
Object.keys(a)
Object.keys()
Object.keys
a.valueOf(1)
a.valueOf()
a.valueOf
a.
a={1:2}
a={}
a.slice()==b.slice()
a.slice()==b
a==b
b=[1,2]
a=[1,2]
['1','2'] == ['1','2']
[1,2] == ['1','2']
[1,2] == [1,2]
[1,2] === [1,2]
[1,2] === [2,1]
[1,2] == [2,1]
a.split("").slice(a.length-9)
a.split("").slice(a.length-1)
a.split("").slice(a.length-1,)
a.split("").slice(a.length-4,)
a.split("").slice(0,9)
a.split("")
a.slice(0,9)
a.slice(0,2)
a.slice(0,1)
a.slice()
a='123344505050'
+a
a='3344556667777443345567777777777'
10000-9751
10000-2837
1/1000
1/4
1/2
8.8888888886
8888888888888888.888888888
8888888888888888
99999999999999999
Math.pow(10,1000)
Math.pow(100,100)
}
j+=0.5;
console.log(i,j);
for(let i=0;i<5||j<5;i++){
}
console.log(i,j);
for(let i=0;i<5||j<5;i++){
}
if(j<10);
for(let i=0;i<5||j>5;i++){
}
console.log(i,j);
for(let i=0;i<5||j>5;i++){
let j=0;
}
console.log(i,j);
for(let i=0;i<5||j>5;i++){
let next = require("next");
9998887776665
 Math.pow(234445,4565666)==Math.pow(12353,366)
 Math.pow(234445,4565666)==Math.pow(12353,366533)
 Math.pow(234445,4565666)>=Math.pow(12353,366533)
 Math.pow(234445,4565666)=>Math.pow(12353,366533)
 Math.pow(234445,4565666)>Math.pow(12353,366533)
 Math.pow(234445,4565666)
Math.cbrt(50000000)
Math.sqrt(50000000)
Math.pow(83,4)
Math.pow(89,4)
Math.pow(97,4)
Math.pow(10,7)*5
Math.pow(100,4)
Math.pow(10,6)*50
Math.pow(10,6)
Math.pow(50,4)
Math.pow(23,4)
Math.pow(17,4)
Math.pow(13,4)
Math.abs(1.1)
500/4
500/3
500/2.5
60/2.5
60/24
500/3
410/10
24/10
Math.sqrt(494)
Math.sqrt(24)
t
t++==0
t=0
99/3
99/11
99/10
99/6
970299*970299
)
Math.pow(99,3
Math.pow(99,9)
Math.pow(99,99)
Math.pow(100,100)
Math.pow(20,25)>1000000
Math.pow(20,25)
1/983
1/98%
1/81
9999999999999/11
9999999999999/9
1/11
a%11
a=Math.pow(10,10)-1
Math.pow(10,10)-1
Math.pow(10,10)
22/7
999999/142857
19*5
19*95
26/65
26*5
9999*1
5796+5346+4396+7254+7632
b
a
b=a.splice(0,1)
a
a.splice(0,1)
a=[1,2,3,4,5]
a.splice(0,1)
a=[1,2,3,4,5]
a
a.splice(1)
a=[1,2,3,4,5]
999*99
999*999
console.log(a.split("").reverse().join(""))
console.log(a)
a='/ \\'
a=10; process.argv.length
 process.argv.length
process.argv.length 10
process.argv.length
1]
process.argv[
process.argv[]
process.argv()
process.argv
+"q"
+"1"
a.reverse()
a=['*  ']
a='*  '
'*  '.reverse()
'*  '
let tri = function(h){
node
assert.equal(1,2)
assert.equal(1,1)
Object.keys(a)[0]*2
Object.keys(a)[0]*1
Object.keys(a)[0]+1
Object.keys(a)[0]
Object.keys(a)
a.valueOf()
a.valueOf
a
a[1]
a[5]
a
a[1]=[1,2,3]
let a={}
'1'==1
9*8*7*6*5*4*3*2*1*10;
9*8*7*6*5*4*3*2*1
a=[];
26*16;
Math.pow(10,10)
Math.pow(15,15)
Math.pow(20,20)
Math.pow(25,25)
Math.pow(49,49)
Math.pow(50,50)
a[-1]
Math.max(-1,-1)
Math.max(0,1)
b='01'
a='123'
Math.pow(99,3)
Math.pow(99,9)
Math.pow(99,11)
Math.pow(99,99)
99/11
Math.pow(1000,5)
Math.pow(1000,10)
Math.pow(1000,100)
Math.pow(10,10)
Math.pow(1000,5)
Math.pow(1000,10)
Math.pow(1000,100)
Math.pow(1000,1000)
#1
3/3/3/3
2/2/2/2
2/2/2
1/1
1+2+3+4+5+6+7
1+2+3+4+5+6+7+8
1+2+3+4+5+6+7+8+9
123456789+9+81+18+81+9+81
123456789+9+81+18+81+9+9
123456789+9+81+18+81+9
123456789+9+81+18+81
123456789+9+81+18+81+27
123456789+9+81+18+81+18
123456789+9+81+18+81
123456789+9+81+18
123456789+9+81+9
123456789+9+81
123456789+9
123456789+90
123456789+81
123456789+9
a.indexOf(2)
a=[1,2,3]
a=[1,2,3\
a=[]
23+37+53+73+313+317+373+797+3137+3797+739397
a.splice(3-2)
a=[1,2,3]
a.join("")
a
ad
a.splice(3-1)
a=[1,2,3]
cd
num.toLocaleString(12)
num.toLocaleString(12^)
num.toLocaleString(1)
num.toLocaleString()
num.toLocaleString
num
num.split
num.split("")
num=1234
b.splice(b.length-1)
b
b.splice(b.length-1)
b
b.splice(b.length-1)
b
b.splice(b.length-1)
b
b.splice(b.length-1)
b.splice(b.length)
b
b.splice(b.length)
b=a.toString().split("")
b
b.splice(1)
b=a.toString().split("")
a.toString().split("")
a.toString().split("").splice(1)
a.toString().split("").splice()
a.toString().split("").slice(1)
a.toString().split("").slice()
a.toString().split("").slice
a.toString().split("")
a.toString().split
a.toString()
a.toString(1)
a.toString()
a.toString
a.slice
a=10000
0010===0010
0010==0010
10==10
0010==10
'0010'=='10'
'1010'=='0101'
string.split("").reverse().join("")
string=number.toString(2)
string.split("").reverse().join("")
string.split("").reverse()
string.split("")
string.split()
string.split
string="ggghj"
string
number.toString(2)
number
number.toFixed(2)
number=10
010
145+40585
54748+92727+93084
9*9*9*9*9
SortedSet t = new Array();
SortedSet set = new Array();
SortedSet set = new SortedSet();
SortedSet se = new SortedSet();
SortedSet Array = new SortedSet();
SortedSet set = new SortedSet();
set=[]
SortedSet set = new SortedSet();
arr=[]
9.791947641036585e+71>9.79351365404554e+123
9.79351365404554e+123
9.791947641036585e+71
9.780024353158716e+87
9.776769148535426e+124
9.774808139711455e+26
9.774779120406942e+21
9.767706834897347e+46
9.763615267845351e+192
9.763383348279358e+182
9.760235198421311e+112
9.755464219737476e+142
9.755182089206455e+49
9.753934409407193e+78
9.747621898252148e+149
9.745365607146045e+40
a.push(9.74414472534231e+136
123>123.15
123>123
!result.includes(a)
result.includes(a)
result.push(a)
result=[]
a=Math.pow(100,100)
char
int
double
a.valueOf(1)
a.valueOf()
a.valueOf(<
a.valueOf
typeof a
a
a=Math.pow(100,100)
a.sort()
a=[1,3,2,5]
61*971
}
break;
console.log(a,b);
if(b>500){
for(let b=0;b<1000;b++){
for(let a=0;a<1000;a++){
Math.pow(10,309)
Math.pow(10,308)
Math.pow(10,309)
Math.pow(10,302)
Math.pow(10,301)
Math.pow(10,310)
Math.pow(10,350)
Math.pow(10,300)
Math.pow(10,400)
Math.pow(10,700)
Math.pow(10,900)
Math.pow(10,1000)
Math.pow(10,100)
Math.pow(1000,100)
Math.pow(1000,1000)
Math.pow(100,100)>=Math.pow(100,100)
Math.pow(100,100)=>Math.pow(100,100)
Math.pow(100,100)>Math.pow(100,100)
Math.pow(100,100)<Math.pow(100,100)
Math.pow(100,100)===Math.pow(100,100)
Math.pow(100,100)==Math.pow(100,100)
Math.pow(100,100)==Math.pow(100,99)
Math.pow(100,99)
Math.pow(100,100)
Math.pow(100,100))
.exit
6*2
40-24
120/5
120*5
2080-1440
720*2
720*3
720*7
120*6
32320-30240
5040*6
5040*7
274240-241920
40320*7
40320*6
40320*5
1000000-362880-362880
1000000-362880
1 === "1"
1 == "1"
undefined === null
undefined == null
typeof map
typeof arr.map
arr.map
arr=[1,2,3,4,5]
Reduce
Map
map
arr.map
typeof map
typeof Map
max
typeof Math.
typeof Math
Math.SQRT1_2()
Math.SQRT1_2
Math.SQRT1
Math.SQRT2
10*9*8*7*6*5*4*3*2*1/10
10*9*8*7*6*5*4*3*2*1
10*9*8
10*9
pkg install
pkg install mancy
in
ind
int
int()
Math.floor(Math.sqrt(220))
Math.sqrt(220)*Math.sqrt(220)
Math.sqrt(220)
456566<23
1<0
0<1
index
index++
index
index++
index
let index = 1
arr
arr.forEach(function(i){return i+1})
arr.forEach()
arr.forEach
arr=[1,2,3,4,5]
A=5*9
a=1*5
console.log(1)
array.hasOwnProperty(6)
array.hasOwnProperty(1)
array.hasOwnProperty()
array.hasOwnProperty
array.reverse().sort()
array.reverse()
array
let array = [1,2,3,4,5]
2*2
1+1+1]
2*2
1+1+1]
2*2
1+1+1
1+1+1]
2*2
1+1+13,4,5]
2*2
1+1+1]
2*2
1+1+1]
2*2
1+1+1+1+1+1+1+1+12*2
1+1+1]
2*2
1+1+1+1+1